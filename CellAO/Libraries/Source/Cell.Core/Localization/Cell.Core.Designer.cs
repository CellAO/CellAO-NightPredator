//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cell.Core.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Cell_Core {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Cell_Core() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cell.Core.Localization.Cell.Core", typeof(Cell_Core).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the network layer!.
        /// </summary>
        internal static string BaseStart {
            get {
                return ResourceManager.GetString("BaseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping the network layer!.
        /// </summary>
        internal static string BaseStop {
            get {
                return ResourceManager.GetString("BaseStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected.
        /// </summary>
        internal static string ClientConnected {
            get {
                return ResourceManager.GetString("ClientConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnected.
        /// </summary>
        internal static string ClientDisconnected {
            get {
                return ResourceManager.GetString("ClientDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered a fatal error while trying to accept a connection. You might have to restart the server..
        /// </summary>
        internal static string FatalAsyncAccept {
            get {
                return ResourceManager.GetString("FatalAsyncAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening endpoint is invalid! Check your configuration and make sure the address and port are valid! Endpoint: {0}.
        /// </summary>
        internal static string InvalidEndpoint {
            get {
                return ResourceManager.GetString("InvalidEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening to TCP socket on {0}.
        /// </summary>
        internal static string ListeningTCPSocket {
            get {
                return ResourceManager.GetString("ListeningTCPSocket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP Listen socket for port {0} closed.
        /// </summary>
        internal static string ListeningTCPSocketStopped {
            get {
                return ResourceManager.GetString("ListeningTCPSocketStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening to UDP socket on {0}.
        /// </summary>
        internal static string ListeningUDPSocket {
            get {
                return ResourceManager.GetString("ListeningUDPSocket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No network adapters are available on the system!.
        /// </summary>
        internal static string NoNetworkAdapters {
            get {
                return ResourceManager.GetString("NoNetworkAdapters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path cannot be be null or empty.
        /// </summary>
        internal static string PathCannotBeNull {
            get {
                return ResourceManager.GetString("PathCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is ready for connections!.
        /// </summary>
        internal static string ReadyForConnections {
            get {
                return ResourceManager.GetString("ReadyForConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server is no longer accepting connections!.
        /// </summary>
        internal static string ServerNotRunning {
            get {
                return ResourceManager.GetString("ServerNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered a socket exception while trying to accept a connection!.
        /// </summary>
        internal static string SocketExceptionAsyncAccept {
            get {
                return ResourceManager.GetString("SocketExceptionAsyncAccept", resourceCulture);
            }
        }
    }
}
